services:

  front:
    image: nginx
    ports:
      - 80:80
    working_dir: /app
    volumes: 
     - ./front:/app
    #command: sh -c "npm install && npm run dev"
    networks:
      - front-network

  back:
    image: directus/directus
    ports:
      - "8055:8055"
    environment:
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DB_CLIENT: ${DB_CLIENT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET: ${SECRET}
      PUBLIC_URL: ${PUBLIC_URL}
      # AU LIEU DE METTRE TOUTES MES VARIABLE D'ENVIRONNEMENT JE REMPLACE PAR:
    # env_file:
    #   - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db-network
        

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
    #- ./data/dump.sql:/docker-entrypoint-initdb.d/init.sql
    - db-data:/var/lib/postgresql/data
    networks:
      - db-network
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${POSTGRES_PASSWORD} psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1' "] # Commande pour tester la disponibilité de PostgreSQL
      interval: 5s   # Vérifier toutes les 30 secondes
      retries: 5      # Essayer 5 fois avant de déclarer l'échec
      start_period: 10s  # Attendre 10 secondes après le démarrage avant d'effectuer le premier test
      timeout: 5s       # Timeout de chaque test à 5 secondes

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db-network



volumes:
  db-data:

networks:
  db-network:
  front-network: